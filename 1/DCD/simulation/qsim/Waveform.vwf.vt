// Copyright (C) 2021  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/05/2022 11:21:01"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          DCD
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module DCD_vlg_vec_tst();
// constants                                           
// general purpose registers
reg Enable;
reg In0;
reg In1;
reg In2;
// wires                                               
wire Out0;
wire Out1;
wire Out2;
wire Out3;
wire Out4;
wire Out5;
wire Out6;
wire Out7;

// assign statements (if any)                          
DCD i1 (
// port map - connection between master ports and signals/registers   
	.Enable(Enable),
	.In0(In0),
	.In1(In1),
	.In2(In2),
	.Out0(Out0),
	.Out1(Out1),
	.Out2(Out2),
	.Out3(Out3),
	.Out4(Out4),
	.Out5(Out5),
	.Out6(Out6),
	.Out7(Out7)
);
initial 
begin 
#1000000 $finish;
end 

// Enable
initial
begin
	Enable = 1'b0;
	Enable = #150000 1'b1;
	Enable = #380000 1'b0;
end 

// In0
initial
begin
	In0 = 1'b0;
	In0 = #20000 1'b1;
	In0 = #80000 1'b0;
	In0 = #100000 1'b1;
	In0 = #30000 1'b0;
	In0 = #80000 1'b1;
	In0 = #50000 1'b0;
	In0 = #110000 1'b1;
	In0 = #50000 1'b0;
end 

// In1
initial
begin
	In1 = 1'b0;
	In1 = #20000 1'b1;
	In1 = #80000 1'b0;
	In1 = #150000 1'b1;
	In1 = #40000 1'b0;
	In1 = #20000 1'b1;
	In1 = #50000 1'b0;
	In1 = #40000 1'b1;
	In1 = #40000 1'b0;
	In1 = #30000 1'b1;
	In1 = #50000 1'b0;
end 

// In2
initial
begin
	In2 = 1'b0;
	In2 = #310000 1'b1;
	In2 = #50000 1'b0;
	In2 = #40000 1'b1;
	In2 = #40000 1'b0;
end 
endmodule

